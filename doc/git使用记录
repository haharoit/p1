# echo打印换行
 echo -e "#后期加注标签\ngit log --pretty=oneline\n" >> git使用记录



# 配置用户信息
git config user.name ""
git config user.email ""

# clone 项目
git clone git@github.com:haharoit/p1.git

# remote
git remote add origin git@github.com:haharoit/p1.git

# add
git add .gitignore

# commit
git commit -m "tag"

# 删除git 的 .idea 文件
git rm --cached -r .idea

# push
git push origin master
#创建、切换分支
git branch dev
git checkout dev
#同git checkout -b  dev
# git commit -a -m m ''等同于git add 和 git commit
#从dev push 到 master
git push origin dev:master
#删除远程分支dev
git push origin :dev

#默认指定master分支，之后可以只用 git push
git push -u origin master

# 删除本地分支
git branch -d dev

# 删除远程分支dev
git branch -r -d origin/dev
git push origin --delete dev



#后期加注标签
#列出标签
git log --pretty=oneline

#添加标签
 git tag -a v1.0.0 905383b00

#列出所有标签
 git tag

#推送到云端
git push origin tagname

#查看标签
git show tagname

#删除本地标签
git tag -d tagname

#合并分支dev到master
#在dev所有代码都push到dev之后，切换到master分支，然后合并代码到master
git checkout master
git merge dev
#在dev push代码到master后，或者使用git merge(本地合并远程分支)后，要把远程仓库代码更新到本地仓库
git fetch
#再进行合并
git merge
#或者使用git pull,git pull=git fetch+git merge,直接取回最新版本代码，可能会发生冲突，需要手动合并，不建议使用
